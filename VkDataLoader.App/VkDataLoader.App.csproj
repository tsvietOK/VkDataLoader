<?xml version="1.0" encoding="utf-8"?>
<Project Sdk="Microsoft.NET.Sdk">
	<PropertyGroup>
		<OutputType>WinExe</OutputType>
		<TargetFramework>net6.0-windows10.0.19041.0</TargetFramework>
		<TargetPlatformMinVersion>10.0.17763.0</TargetPlatformMinVersion>
		<RootNamespace>VkDataLoader.App</RootNamespace>
		<ApplicationManifest>app.manifest</ApplicationManifest>
		<Platforms>x86;x64;arm64</Platforms>
		<RuntimeIdentifiers>win10-x86;win10-x64;win10-arm64</RuntimeIdentifiers>
		<PublishProfile>win10-$(Platform).pubxml</PublishProfile>
		<UseWinUI>true</UseWinUI>
		<EnablePreviewMsixTooling>true</EnablePreviewMsixTooling>
		<ImplicitUsings>enable</ImplicitUsings>
		<WindowsAppSDKSelfContained>true</WindowsAppSDKSelfContained>
		<PackageCertificateThumbprint>2EA72F45AF2440981A52DCD597DCFF312ECA4A63</PackageCertificateThumbprint>
		<AppxPackageSigningEnabled>True</AppxPackageSigningEnabled>
	</PropertyGroup>
	<PropertyGroup Label="MultilingualAppToolkit">
		<MultilingualAppToolkitVersion>4.0</MultilingualAppToolkitVersion>
		<MultilingualFallbackLanguage>en-US</MultilingualFallbackLanguage>
		<TranslationReport Condition="'$(Configuration)' == 'Release'">true</TranslationReport>
		<SuppressPseudoWarning Condition="'$(Configuration)' == 'Debug'">true</SuppressPseudoWarning>
	</PropertyGroup>
	<Import Project="$(MSBuildExtensionsPath)\Microsoft\Multilingual App Toolkit\Microsoft.Multilingual.PriResources.targets" Label="MultilingualAppToolkit" Condition="Exists('$(MSBuildExtensionsPath)\Microsoft\Multilingual App Toolkit\v$(MultilingualAppToolkitVersion)\Microsoft.Multilingual.PriResources.targets')" />
	<Target Name="MATPrerequisite" BeforeTargets="PrepareForBuild" Condition="!Exists('$(MSBuildExtensionsPath)\Microsoft\Multilingual App Toolkit\Microsoft.Multilingual.PriResources.targets')" Label="MultilingualAppToolkit">
		<Warning Text="$(MSBuildProjectFile) is Multilingual build enabled, but the Multilingual App Toolkit is unavailable during the build. If building with Visual Studio, please check to ensure that toolkit is properly installed." />
	</Target>
	<ItemGroup>
		<None Remove="MultilingualResources\VkDataLoader.App.uk-UA.xlf" />
	</ItemGroup>
	<ItemGroup>
		<Content Include="Assets\SplashScreen.scale-200.png" />
		<Content Include="Assets\LockScreenLogo.scale-200.png" />
		<Content Include="Assets\Square150x150Logo.scale-200.png" />
		<Content Include="Assets\Square44x44Logo.scale-200.png" />
		<Content Include="Assets\Square44x44Logo.targetsize-24_altform-unplated.png" />
		<Content Include="Assets\Wide310x150Logo.scale-200.png" />
	</ItemGroup>
	<ItemGroup>
		<PackageReference Include="Microsoft.Toolkit.Mvvm" Version="7.1.2" />
		<PackageReference Include="Microsoft.WindowsAppSDK" Version="1.1.0-preview3" />
		<Manifest Include="$(ApplicationManifest)" />
	</ItemGroup>
	<!-- Defining the "Msix" ProjectCapability here allows the Single-project MSIX Packaging
       Tools extension to be activated for this project even if the Windows App SDK Nuget
       package has not yet been restored -->
	<ItemGroup Condition="'$(DisableMsixProjectCapabilityAddedByProject)'!='true' and '$(EnablePreviewMsixTooling)'=='true'">
		<ProjectCapability Include="Msix" />
	</ItemGroup>
	<ItemGroup>
		<ProjectReference Include="..\VkDataLoader\VkDataLoader.csproj" />
	</ItemGroup>
	<ItemGroup>
		<XliffResource Include="MultilingualResources\VkDataLoader.App.uk-UA.xlf" />
	</ItemGroup>
	<ItemGroup>
		<Content Update="Assets\Square44x44Logo.altform-lightunplated_targetsize-16.png">
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
		</Content>
	</ItemGroup>
</Project>